// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Battery Technologies Users (employees of Battery Technologies)
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  clerkId   String   @unique
  role      UserRole @default(TECHNICIAN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  jobs          Job[]          @relation("JobAssignedTo")

  @@map("users")
}

// Service Provider Customers (companies that hire Battery Technologies)
model ServiceProvider {
  id            String   @id @default(cuid())
  name          String
  email         String?
  phone         String?
  address       String?
  city          String?
  state         String?
  zipCode       String?
  country       String?
  status        CustomerStatus @default(ACTIVE)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  customers      Customer[]
  jobs           Job[]

  @@map("service_providers")
}

// End Customers (can be referred by Service Providers or direct customers)
model Customer {
  id            String   @id @default(cuid())
  name          String
  email         String?
  phone         String?
  address       String?
  city          String?
  state         String?
  zipCode       String?
  country       String?
  status        CustomerStatus @default(ACTIVE)
  customerType  CustomerType @default(DIRECT) // DIRECT or REFERRED
  referralNotes String? // Notes about the referral relationship
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  serviceProviderId String? // Optional - only for referred customers
  serviceProvider   ServiceProvider? @relation(fields: [serviceProviderId], references: [id], onDelete: SetNull)
  locations      Location[]
  jobs           Job[]
  contacts       Contact[]

  @@map("customers")
}

// Customer Locations
model Location {
  id          String   @id @default(cuid())
  name        String
  address     String
  city        String
  state       String
  zipCode     String
  country     String
  phone       String?
  email       String?
  status      LocationStatus @default(ACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  customerId  String
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  jobs        Job[]
  contacts    Contact[]

  @@map("locations")
}

// Contacts (can be customer-specific or location-specific)
model Contact {
  id          String   @id @default(cuid())
  firstName   String
  lastName    String
  email       String?
  phone       String?
  title       String?
  department  String?
  isPrimary   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships - can belong to either customer or location
  customerId  String?
  customer    Customer? @relation(fields: [customerId], references: [id], onDelete: Cascade)
  locationId  String?
  location    Location? @relation(fields: [locationId], references: [id], onDelete: Cascade)
  jobs        Job[]     @relation("JobContact")

  @@map("contacts")
}

// Battery Servicing Jobs
model Job {
  id              String      @id @default(cuid())
  jobNumber       String      @unique
  description     String?
  status          JobStatus   @default(OPEN)
  estimatedHours  Float?
  actualHours     Float?
  startDate       DateTime?
  endDate         DateTime?
  dueDate         DateTime?
  notes           String?
  batteryType     String?     // Type of battery being serviced
  batteryModel    String?     // Model of the battery
  batterySerial   String?     // Serial number of the battery
  serviceType     ServiceType @default(BATTERY_INSPECTION)
  equipmentType   String?     // Type of equipment (e.g., "Forklift", "UPS", "Emergency Lighting")
  equipmentModel  String?     // Model of the equipment
  equipmentSerial String?     // Serial number of the equipment
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  // Relationships
  serviceProviderId String? // Optional - only for referred customers
  serviceProvider   ServiceProvider? @relation(fields: [serviceProviderId], references: [id], onDelete: SetNull)
  customerId      String
  customer        Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  locationId      String?
  location        Location? @relation(fields: [locationId], references: [id], onDelete: SetNull)
  contactId       String?
  contact         Contact? @relation("JobContact", fields: [contactId], references: [id], onDelete: SetNull)
  assignedToId    String?
  assignedTo      User? @relation("JobAssignedTo", fields: [assignedToId], references: [id], onDelete: SetNull)
  photos          JobPhoto[]

  @@map("jobs")
}

// Job Photos
model JobPhoto {
  id          String   @id @default(cuid())
  filename    String
  originalName String
  mimeType    String
  size        Int
  url         String
  caption     String?
  isPrimary   Boolean  @default(false)
  createdAt   DateTime @default(now())

  // Relationships
  jobId       String
  job         Job @relation(fields: [jobId], references: [id], onDelete: Cascade)

  @@map("job_photos")
}

// Enums
enum UserRole {
  ADMIN
  MANAGER
  TECHNICIAN
  VIEWER
}

enum CustomerStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum CustomerType {
  DIRECT      // Battery Technologies' direct customers
  REFERRED    // Customers referred by service providers
}

enum LocationStatus {
  ACTIVE
  INACTIVE
  CLOSED
}

enum JobStatus {
  OPEN
  COMPLETE
  VISITED
  NEEDS_QUOTE
  ON_HOLD
  CANCELLED
}

enum ServiceType {
  BATTERY_INSPECTION
  CHARGER_INSPECTION
  BATTERY_CHARGER_INSPECTION
  SUPPLY_FIT_BATTERY
  SUPPLY_DELIVER_CHARGER
  SUPPLY_FIT_CELLS
  CHARGER_RENTAL
  BATTERY_WATER_TOPPING
  BATTERY_REPAIR
  BATTERY_RENTAL
  CHARGER_REPAIR
  PARTS_ORDERED
  SITE_SURVEY
  DELIVERY
  COLLECTION
  OTHER
}
